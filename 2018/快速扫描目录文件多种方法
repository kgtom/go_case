
第一种：godirwalk

package main

import (
	"fmt"
	"github.com/karrick/godirwalk"
)

func main() {
	count := 0
	godirwalk.Walk("./", &godirwalk.Options{
		Unsorted: true,
		Callback: func(osPathname string, de *godirwalk.Dirent) error {
			count++
			return nil
		},
		ErrorCallback: func(osPathname string, err error) godirwalk.ErrorAction {
			return godirwalk.SkipNode
		},
	})
	fmt.Println(count)
}

第二种：cwalk
package main

import (
	"fmt"
	"github.com/iafan/cwalk"
	"os"
)

func main() {
	count := 0
	cwalk.Walk("./", func(root string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		count++
		return nil
	})
	fmt.Println(count)
}

第三种：filepath
package main

import (
	"fmt"
	"os"
	"path/filepath"
)

func main() {
	count := 0
	filepath.Walk("./", func(root string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		count++
		return nil
	})

	fmt.Println(count)
}

第四种：filepath

package main

import (
	"fmt"
	"github.com/MichaelTJones/walk"
	"os"
)

func main() {
	count := 0
	walk.Walk("./", func(root string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		count++

		return nil
	})

	fmt.Println(count)
}

性能测试总结：
Godirwalk：最快
官方：最慢
reference：
http://www.boyter.org/2018/03/quick-comparison-go-file-walk-implementations/
