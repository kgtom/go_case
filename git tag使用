tag

tag 用于创建一个标签 用于在开发阶段，某个阶段的完成，创建一个版本，在开发中都会使用到, 可以创建一个tag来指向软件开发中的一个关键时期，比如版本号更新的时候可以建一个version1.0,  version1.2之类的标签，这样在以后回顾的时候会比较方便。tag的使用很简单

将自己的代码交给cocoapod的时候，需要编写Ruby的podspec文件,也需要tag 的版本

基本操作有：查看tag、创建tag、验证tag、共享tag。

1查看tag

列出所有tag

git tag
这样列出的tag是按字母排序的，和创建时间没关系。如果只是想查看某些tag的话，可以加限定：

git tag -l version1.*

这样就只会列出1.几的版本。

2创建tag

创建轻量级tag：

git tag version 1.0  也可以 git tag 1.0
带有信息的tag

git tag -a version1.0 -m 'first version'
-m 后面带的就是注释信息，一般写当前的版本作用，这种是普通tag

签名的tag：

git tag -s version1.0 -m 'first version'
前提是你有GPG私钥，把上面的a换成s就行了。除了可以为当前的进度添加tag，还可以为以前的commit添加tag：

首先查看以前的commit

git log --oneline
假如有这样一个commit：5ac6794 update code

这样为他添加tag

git tag -a version1.15ac6794

3删除tag

很简单，知道tag名称后：

git tag -d v1.0 //删除本地
git push origin :refs/tags/v1.0 //删除远程tag

4.推送到远程分支

我们在执行 git push 的时候，tag是不会上传到服务器的，比如现在的github，创建 tag 后 git push ，在github网页上是看不到tag 的，为了共享这些tag，你必须这样：

git push origin --tags

reference：http://www.jianshu.com/p/32054f3e415d
